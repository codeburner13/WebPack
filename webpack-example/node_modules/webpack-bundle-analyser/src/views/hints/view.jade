if !multiChunks.length && !multiRefs.length && !longChains.length
  section.hero.is-success
    .hero-body
      .container
        h1.title
          | Smooth sailing. â›µ
        h2.subtitle
          | Everything seems to be fine.

if multiChunks.length
  section.hero.is-warning
    .hero-body
      .container
        h1.title
          | Module in multiple chunks.
        h2.subtitle
          | Here's what you can do.

  br

  .container
    p.subtitle.is-4
      | Check if it is a good idea to move modules into a common parent. You may want to use <code>require.include</code> or insert them into the parents <code>require.ensure</code> array.

  br

  table.table.is-bordered.is-fullwidth
    thead
      tr
        th module
        th name
        th count
        th chunks
        th saving

    tbody
      for item in multiChunks
        tr
          td
            if typeof item.module.uid === 'number'
              a.button.is-success(href="#module/#{item.module.uid}")
                = item.module.id
            else
              span.button.is-success
                = item.module.id

          splittedModule = item.module.name.split('!')
          td: pre: code
            = splittedModule.join('\n')
          td
            = item.count
          td
            for chunk, idx in item.module.chunks
              if idx > 0
                = ' '
              a.button.is-info(href="#chunk/#{chunk}")
                = chunk
          td= require('formatSize').default(item.saving)

if multiRefs.length
  section.hero.is-warning
    .hero-body
      .container
        h1.title
          | Multiple references to the same module.
        h2.subtitle
          | Here's what you can do.

  br

  .container
    p.subtitle.is-4
      | Refactor this:
    pre: code.
      const a = require('xyz').a;
      const b = require('xyz').b;
      const c = require('xyz').c;

    br

    p.subtitle.is-4
      | To this:
    pre: code.
      const xyz = require('xyz');
      const { a, b, c } = xyz;

  br

  table.table.is-bordered.is-fullwidth
    thead
      tr
        th module
        th name
        th count
        th referenced module
        th referenced name
        th saving

    tbody
      for item in multiRefs
        tr
          td
            if typeof item.module.uid === 'number'
              a.button.is-success(href="#module/#{item.module.uid}")
                = item.module.id
            else
              span.button.is-success
                = item.module.id

          td: pre: code
            = item.module.name.split('!').join('\n')
          td= item.count
          td
            if typeof item.otherModule.uid === 'number'
              a.button.is-success(href="#module/#{item.otherModule.uid}")
                = item.otherModule.id
            else
              span.button.is-success
                = item.otherModule.id

          td: pre: code
            = item.otherModule.name.split('!').join('\n')
          td
            = require('formatSize').default(item.saving) + '+'

if longChains.length
  section.hero.is-warning
    .hero-body
      .container
        h1.title
          | Long module build chains.
        h2.subtitle
          | Here's what you can do.

  br

  .container
    p.subtitle.is-4
      | Use prefetching to increase build performance. Prefetch a module from the middle of the chain.

  br

  for chain in longChains
    table.table.is-bordered.is-fullwidth
      thead
        tr
          th module
          th name
          th time
          th finished @

        tbody
          for module in chain
            tr
              td
                if typeof module.uid === 'number'
                  a.button.is-success(href="#module/#{module.uid}")
                    = module.id
                else
                  span.button.is-success
                    = module.id

              td: pre: code
                = module.name.split('!').join('\n')
              td
                = module.time + ' ms'
              td
                = module.timestamp + ' ms'
