const hsv2rgb = (h, s, v) => {
  h = (h % 1 + 1) % 1; // eslint-disable-line no-mixed-operators

  const i = Math.floor(h * 6);
  const f = h * 6 - i; // eslint-disable-line no-mixed-operators
  const p = v * (1 - s);
  const q = v * (1 - s * f); // eslint-disable-line no-mixed-operators
  const t = v * (1 - s * (1 - f)); // eslint-disable-line no-mixed-operators

  switch (i) {
    case 0: return [v, t, p];
    case 1: return [q, v, p];
    case 2: return [p, v, t];
    case 3: return [p, q, v];
    case 4: return [t, p, v];
    case 5: return [v, p, q];
    default: return [0, 0, 0];
  }
};

const toStr = rgb => `rgb(${rgb.map(x => Math.floor(256 * x)).join(',')})`;

export const colorSpace = p => {
  const rgb = hsv2rgb(p, 1, 0.7);
  return toStr(rgb);
};

export const greenRed = p => {
  const rgb = hsv2rgb((1 - p) / 3, 1, 0.7);
  return toStr(rgb);
};

export const blue = p => {
  const rgb = hsv2rgb(p / 3 + 0.5, 1, 0.7); // eslint-disable-line no-mixed-operators
  return toStr(rgb);
};
